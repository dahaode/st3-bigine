# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Bigine
scopeName: text.bigine
fileTypes: [bigine, bws]
uuid: 74ffd726-943b-4531-8657-cebb5215f277

patterns:
- include: '#bigine'

repository:
  illegal:
    match: ^.*$
    name: invalid.illegal.bigine

  id-per-line:
    match: ^\t\t(?:(\S+)|(.*))(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$
    captures:
      '1': {name: entity.other.attribute-name.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}

  field-per-line:
    match: ^\t(\S+)(?:：(\S+)|(：))$
    captures:
      '1': {name: string.quoted.double.bigine}
      '2': {name: variable.other.state.bigine}
      '3': {name: invalid.illegal.bigine}

  empty-field-per-line:
    match: ^\t(空)$
    captures:
      '1': {name: constant.language.bigine}

  struct-resource:
    match: ^(素材包)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
    name: meta.bigine.suite meta.bigine.after.colon
    captures:
      '1': {name: storage.modifier.bigine}
      '2': {name: constant.language.bigine}
      '3': {name: invalid.illegal.bigine}

  struct-theme:
    match: ^(主题)(?:：(\S+)|(：.*))$\n?
    name: meta.bigine.theme meta.bigine.after.colon
    captures:
      '1': {name: storage.modifier.bigine}
      '2': {name: constant.language.bigine}
      '3': {name: invalid.illegal.bigine}

  struct-autoplay:
    match: ^(自动播放)(?:|：(.*))$\n?
    name: meta.bigine.autoplay
    captures:
      '1': {name: storage.modifier.bigine}
      '2': {name: invalid.illegal.bigine}

  struct-player:
    match: ^(主角)(?:：(\S+)|(：.*))$\n?
    name: meta.bigine.player
    captures:
      '1': {name: storage.modifier.bigine}
      '2': {name: entity.other.inherited-class.bigine}
      '3': {name: invalid.illegal.bigine}

  struct-character:
    begin: ^(人物)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.char
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.other.inherited-class.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.name.type.bigine}
      '5': {name: invalid.illegal.bigine}
    patterns:
    - match: ^\t(头像)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
      name: meta.bigine.char.avatar
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - begin: ^\t(姿态)：?$
      end: ^(?=$|\t?\S)
      name: meta.bigine.char.poses
      beginCaptures:
        '1': {name: storage.modifier.bigine}
      patterns:
      - include: '#id-per-line'
    - include: '#illegal'

  struct-room:
    begin: ^(房间)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.room
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.other.inherited-class.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.name.type.bigine}
      '5': {name: invalid.illegal.bigine}
    patterns:
    - match: ^\t(使用地图)(?:：(\S+)|(：.*))$\n?
      name: meta.bigine.room.map
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - begin: ^\t(时刻)：?$
      end: ^(?=$|\t?\S)
      name: meta.bigine.char.snaps
      beginCaptures:
        '1': {name: storage.modifier.bigine}
      patterns:
      - include: '#id-per-line'
    - include: '#illegal'

  struct-map:
    begin: ^(地图)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.map
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.other.inherited-class.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.name.type.bigine}
      '5': {name: invalid.illegal.bigine}
    patterns:
    - match: ^\t(底图)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
      name: meta.bigine.map.back
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - begin: ^\t(交互点)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
      end: ^(?=$|\t?\S)
      name: meta.bigine.map.point
      beginCaptures:
        '1': {name: storage.modifier.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.other.attribute-name.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - match: ^\t\t(高亮)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
        name: meta.bigine.map.point.cover
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: constant.language.bigine}
          '3': {name: invalid.illegal.bigine}
      - match: ^\t\t(对应房间)(?:：(\S+)|(：.*))$\n?
        name: meta.bigine.map.point.link
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: entity.other.inherited-class.bigine}
          '3': {name: invalid.illegal.bigine}
      - match: ^\t\t(区域)(?:：(-?\d+)，(-?\d+)，(-?\d+)，(-?\d+)(?:|，(\d+))|(：.*))$\n?
        name: meta.bigine.map.point.region
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: constant.numeric.bigine}
          '3': {name: constant.numeric.bigine}
          '4': {name: constant.numeric.bigine}
          '5': {name: constant.numeric.bigine}
          '6': {name: constant.numeric.bigine}
          '7': {name: invalid.illegal.bigine}
      - include: '#illegal'
    - include: '#illegal'

  struct-sound:
    begin: ^(音乐|音效)(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.sound
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.name.type.bigine}
      '3': {name: invalid.illegal.bigine}
    patterns:
    - match: ^\t(音源)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
      name: meta.bigine.sound.source
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - include: '#illegal'

  struct-cg:
    begin: ^(特写)(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.cg
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.name.type.bigine}
      '3': {name: invalid.illegal.bigine}
    patterns:
    - match: ^\t(画面)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
      name: meta.bigine.cg.source
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - include: '#illegal'

  struct-status:
    begin: ^(状态)(?:|：|：(\S+))$\n?
    end: ^(?=$|\S)
    name: meta.bigine.status
    contentName: meta.bigine.literal meta.bigine.ref.state.perline meta.bigine.ref.state.colon meta.bigine.after.colon
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: invalid.illegal.bigine}
    patterns:
    - include: '#field-per-line'
    - include: '#empty-field-per-line'
    - include: '#state-per-line'
    - include: '#illegal'

  struct-structure-field:
    begin: ^\t(字段)(：(\S+))$\n?
    end: ^(?!\t\t+)
    name: meta.bigine.structure.field
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: variable.other.structure.bigine}
    patterns:
    - comment: structure field type
      match: ^\t\t(类别)(：(名称|人物|房间|特写|星|心))$\n?
      name: meta.bigine.structure.field.type
      captures:
        '1': {name: storage.type.bigine}
        '2': {name: entity.other.inherited-class.bigine}
    - comment: structure field limit
      match: ^\t\t(上限)(：([1-9][0-9]*))$\n?
      name: meta.bigine.structure.field.limit
      captures:
        '1': {name: storage.type.bigine}
        '2': {name: constant.language.bigine}
    - include: '#illegal'

  struct-structure:
    begin: ^(结构)(：(\S+))$\n?
    end: ^(?=$|\S)
    name: meta.bigine.structure
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: constant.language.bigine}
    patterns:
    - include: '#struct-structure-field'
    - include: '#illegal'

  struct-panel-simple-item:
    begin: ^\t\t(条目)(：(\S+))$\n?
    end: ^(?!\t\t\t+)
    name: meta.bigine.panel.simple.item
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: variable.other.structure.bigine}
    patterns:
    - comment: real variable name
      match: ^\t\t\t(数据名)(：(\S+))$\n?
      name: meta.bigine.panel.simple.item.name
      captures:
        '1': {name: storage.type.bigine}
        '2': {name: variable.other.structure.bigine}
    - comment: display type
      match: ^\t\t\t(数据类别)(：(星|心))$\n?
      name: meta.bigine.panel.simple.item.type
      captures:
        '1': {name: storage.type.bigine}
        '2': {name: constant.language.bigine}
    - include: '#illegal'

  struct-panel-simple:
    begin: ^\t(简单面板)(：(\S+))$\n?
    end: ^(?!\t\t+)
    name: meta.bigine.panel.simple
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: variable.other.panel.bigine}
    patterns:
    - include: '#struct-panel-simple-item'
    - include: '#illegal'

  struct-panel-coll:
    begin: ^\t(集合面板)(：(\S+))$\n?
    end: ^(?!\t\t+)
    name: meta.bigine.panel.coll
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: variable.other.panel.bigine}
    patterns:
    - comment: collection name defined
      match: ^\t\t(使用集合)(：(\S+))$\n?
      name: meta.bigine.panel.coll.name
      captures:
        '1': {name: storage.type.bigine}
        '2': {name: constant.variable.bigine}
    - comment: collection structure defined
      match: ^\t\t(集合结构)(：(\S+))$\n?
      name: meta.bigine.panel.coll.structure
      captures:
        '1': {name: storage.type.bigine}
        '2': {name: constant.language.bigine}
    - include: '#illegal'

  struct-panel:
    begin: ^(面板)：$\n?
    end: ^(?=$|\S)
    name: meta.bigine.panel
    beginCaptures:
      '1': {name: storage.type.bigine}
    patterns:
    - include: '#struct-panel-simple'
    - include: '#struct-panel-coll'
    - include: '#illegal'

  struct:
    begin: ^(?=$|\S)
    end: ^(?=$|\S)
    patterns:
    - include: '#struct-resource'
    - include: '#struct-theme'
    - include: '#struct-autoplay'
    - include: '#struct-player'
    - include: '#struct-character'
    - include: '#struct-room'
    - include: '#struct-map'
    - include: '#struct-sound'
    - include: '#struct-cg'
    - include: '#struct-status'
    - include: '#struct-structure'
    - include: '#struct-panel'
    - include: '#illegal'

  state-per-line:
    match: ^\t+(\S+)$\n?
    captures:
      '1': {name: variable.other.state.bigine}

  option-per-line:
    patterns:
    - match: ^\t+(?:([^（）\s]+?)(?:|（([1-9]\d*)）)|(.*))(?:：(\S(?:|.*\S))|(：.*))$
      captures:
        '1': {name: constant.character.bigine}
        '2': {name: constant.numeric.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: string.quoted.double.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(\S(?:|.*\S))$
      captures:
        '1': {name: constant.character.bigine}

  action-choose:
    patterns:
    - begin: ^(\t+)(选择)(?:|（([^，\s]+)）|(（.*）))(?:|：(\S+)|(：.*))$\n?
      end: ^(?!\1\t)
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket meta.bigine.ref.choose.colon meta.bigine.after.colon
      contentName: meta.bigine.literal
      beginCaptures:
        '2': {name: keyword.control.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
        '5': {name: variable.other.choose.bigine}
        '6': {name: invalid.illegal.bigine}
      patterns:
      - include: '#option-per-line'
      - include: '#illegal'
    - begin: ^(\t+)(定义选择)(?:：(\S+)|(：.*))$\n?
      end: ^(?!\1\t)
      name: meta.bigine.ref.choose.colon meta.bigine.after.colon
      contentName: meta.bigine.literal
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: variable.other.choose.bigine}
        '4': {name: invalid.illegal.bigine}
      patterns:
      - include: '#option-per-line'
      - include: '#illegal'
    - match: ^\t+(添加选项)(?:（([^，\s]+)，([^，\s]+)(?:|，([1-9]\d*))）|(（.*）))(?:|：(.*))$\n?
      name: meta.bigine.ref.choose.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.choose.bigine}
        '3': {name: constant.character.bigine}
        '4': {name: constant.numeric.bigine}
        '5': {name: invalid.illegal.bigine}
        '6': {name: string.quoted.double.bigine}
    - match: ^\t+(去除选项)(?:（([^，\s]+)，([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.choose.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.choose.bigine}
        '3': {name: constant.character.bigine}
        '4': {name: invalid.illegal.bigine}

  action-mxximum:
    begin: ^(\t+)(最[大小]数据)(?:|（([^，\s]+)）|(（.*）))：?$\n?
    end: ^(?!\1\t)
    name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
    contentName: meta.bigine.literal meta.bigine.ref.state.perline
    beginCaptures:
      '2': {name: keyword.operator.bigine}
      '3': {name: variable.other.state.bigine}
      '4': {name: invalid.illegal.bigine}
    patterns:
    - include: '#state-per-line'
    - include: '#illegal'

  action-arithmetic:
    patterns:
    - begin: ^(\t+)(数据合值)(?:（([^，\s]+)）|(（.*）))：?$\n?
      end: ^(?!\1\t)
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      contentName: meta.bigine.literal meta.bigine.ref.state.perline
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
      patterns:
      - include: '#state-per-line'
      - include: '#illegal'
    - begin: ^(\t+)(数据差值)(?:（([^，\s]+)，([^，\s]+)）|(（.*）))：?$\n?
      end: ^(?!\1\t)
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket meta.bigine.ref.state.comma meta.bigine.after.comma
      contentName: meta.bigine.literal meta.bigine.ref.state.perline
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: variable.other.state.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - include: '#state-per-line'
      - include: '#illegal'

  action-block:
    patterns:
    - begin: ^(\t+)(?:(且|或|那么|否则|循环)|(如果)(?:（([^，\s](?:|[^，]*[^，\s]))）|(（.*）)))：?$
      end: ^(?!\1\t)
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: keyword.operator.bigine}
        '4': {name: constant.character.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - include: '#action'
    - begin: ^(\t+)(如果数据)(?:（([^，\s]+)）|(（.*）))：?$
      end: ^(?!\1\t)
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
      patterns:
      - include: '#action'

  action-state:
    patterns:
    - match: ^\t+(当数据)(?:（([^，\s]+?)，([^，\s](?:|[^，]*[^，\s]))(?:|，(不?[等大小]于))）|(（.*）))：?$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: constant.character.bigine}
        '4': {name: constant.language.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+((?:对比|随机)数据)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+((?:设置|增加)数据)(?:（([^，\s]+)）|(（.*）))(?:：(\S(?:|.*\S))|(：.*))$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: constant.character.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(复制数据)(?:（([^，\s]+)，([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket meta.bigine.ref.state.comma meta.bigine.after.comma
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
    - match: ^\t+(当时间)(?:（([^，\s]+)）|(（.*）))：?$
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: entity.other.attribute-name.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(自动存档)(?:|（([^，\s]+)）|(（.*）))：?$\n?
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: string.quoted.double.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(游戏(?:完结|失败)|循环中止)：?$\n?
      captures:
        '1': {name: keyword.operator.bigine}
    - match: ^\t+(打赏)(?:（([1-9]\d*)）|(（.*）))：?$\n?
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: constant.numeric.bigine}
        '3': {name: invalid.illegal.bigine}

  action-director:
    patterns:
    - match: ^\t+(设置人物|人物出场)(?:|（(最左|左|左中|中|右中|右|最右)）|(（.*）))(?:：([^，\s](?:|[^，]*[^，\s]))(?:|，([^，\s]+))|(：.*))$\n?
      name: meta.bigine.ref.char.colon meta.bigine.after.colon meta.bigine.ref.pose.comma meta.bigine.after.comma
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.other.inherited-class.bigine}
        '5': {name: entity.other.attribute-name.bigine}
        '6': {name: invalid.illegal.bigine}
    - match: ^\t+(人物离场)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+((?:播放|环境)音乐)(?:（([^，\s]+)(?:|，(100|[1-9]?\d))）|(（.*）))：?$\n?
      name: meta.bigine.ref.bgm.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: constant.numeric.bigine}
        '4': {name: invalid.illegal.bigine}
    - match: ^\t+(播放音效)(?:（([^，\s]+)(?:|，(100|[1-9]?\d))）|(（.*）))：?$\n?
      name: meta.bigine.ref.se.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: constant.numeric.bigine}
        '4': {name: invalid.illegal.bigine}
    - match: ^\t+(展示特写)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.cg.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(设置房间)(?:（([^，\s]+)(?:|，([^，\s]+))）|(（.*）))：?$\n?
      name: meta.bigine.ref.room.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: entity.other.attribute-name.bigine}
        '4': {name: invalid.illegal.bigine}
    - match: ^\t+(进入房间)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.room.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(设置时间)(?:（([^，\s]+)）|(（.*）))：?$
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.attribute-name.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(改变神态)(?:（([^，\s]+)）|(（.*）))(?:：([^，\s]+)|(：.*))$\n?
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket meta.bigine.ref.pose.colon meta.bigine.after.colon
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.other.attribute-name.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(评分)(?:（(传奇|超绝|完美|优秀|及格)(?:|，([^，\s]+)|(，.*))）|(（.*）))：?$\n?
      name: meta.bigine.ref.state.comma meta.bigine.after.comma
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(关闭特写|移动中止|停止音乐|停止音效|环境静音)：?$\n?
      captures:
        '1': {name: keyword.control.bigine}
    - match: ^\t+(人物移动)(?:（([^，\s]+)）|(（.*）))(?:：(最左|左|左中|中|右中|右|最右)|(：.*))$\n?
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: constant.language.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(设置音量)(?:（(音乐|音效|环境)，(100|[1-9]?\d)）|(：.*))$\n?
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: constant.numeric.bigine}
        '4': {name: invalid.illegal.bigine}

  action-words:
    begin: ^\t+(?:([旁独]白|提示)(?=：)|(对白)(?=（))
    end: $
    beginCaptures:
      '1': {name: keyword.control.bigine}
      '2': {name: keyword.control.bigine}
    patterns:
    - match: (?<=对白)(?:（([^，\s]+)，([^，\s]+)(?:|，(\S(?:|.*?\S)))）|(（.*）))(?=：)
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket meta.bigine.ref.char.comma meta.bigine.after.comma
      captures:
        '1': {name: entity.other.inherited-class.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: string.quoted.double.bigine}
        '4': {name: invalid.illegal.bigine}
    - begin: (?<=：)
      end: $
      contentName: string.quoted.double.bigine
      patterns:
      - match: 【(.+?)】
        name: string.regexp.bigine
      - match: 〈(\S+?)〉|＜(\S+?)＞
        name: string.interpolated.bigine
        captures:
          '1': {name: variable.other.state.bigine}
          '2': {name: variable.other.state.bigine}

  def-data-per-line:
    match: ^\t\t\t(\S+)：(\S+)$\n?
    captures:
      '1': {name: entity.other.inherited-class.bigine}
      '2': {name: variable.other.data.def.bigine}

  action-def-data:
    # begin: ^(\t\t)(定义数据)（(\S+)）：(\S+)$\n?
    begin: ^(\t\t)(定义数据)(?:(?:(（）)|（(\S+)）)(?:(?:：(\S+))|(：))|(：.*))$\n?
    end: ^(?!\1\t+)
    name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
    contentName: meta.bigine.literal meta.bigine.ref.state.perline
    beginCaptures:
      '2': {name: keyword.operator.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.other.inherited-class.bigine}
      '5': {name: constant.variable.bigine}
      '6': {name: invalid.illegal.bigine}
      '7': {name: invalid.illegal.bigine}
    patterns:
    - include: '#def-data-per-line'
    - include: '#illegal'

  def-coll-per-line:
    match: ^\t\t\t(\S+)$\n?
    captures:
      '1': {name: entity.other.inherited-class.bigine}

  action-def-coll:
    begin: ^(\t\t)(定义集合)(?:(?:(（）)|（(\S+)）)(?:(?:：(\S+))|(：))|(：.*))$\n?
    end: ^(?!\1\t+)
    name: meta.bigine.ref.struct.bracket meta.bigine.after.bracket
    contentName: meta.bigine.literal meta.bigine.ref.state.perline
    beginCaptures:
      '2': {name: keyword.operator.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.other.inherited-class.bigine}
      '5': {name: constant.variable.bigine}
      '6': {name: invalid.illegal.bigine}
      '7': {name: invalid.illegal.bigine}
    patterns:
    - include: '#def-coll-per-line'
    - include: '#illegal'

  action-coll-pop:
    match: ^(\t\t)(删除元素)(?:(?:(（）)|（(\S+)）)(?:(?:：(\S+))|(：))|(：.*))$\n?
    captures:
      '2': {name: keyword.operator.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.other.inherited-class.bigine}
      '5': {name: constant.variable.bigine}
      '6': {name: invalid.illegal.bigine}
      '7': {name: invalid.illegal.bigine}

  action-coll-append:
    match: ^(\t\t)(增加元素)(?:(?:(（）)|（(\S+)）)(?:(?:：(\S+))|(：))|(：.*))$\n?
    captures:
      '2': {name: keyword.operator.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: entity.other.inherited-class.bigine}
      '5': {name: constant.variable.bigine}
      '6': {name: invalid.illegal.bigine}
      '7': {name: invalid.illegal.bigine}

  action-pause:
    match: ^\t+(停顿)(?:(?:|(（）)|（(?:([短中长])|([^）]*))）)：?|(.*))$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}
      '5': {name: invalid.illegal.bigine}

  action-camera-set:
    match: ^\t+(设置镜头)(?:(?:：(左上|上|右上|左|中|右|左下|下|右下)|(：.*))|(：.*))$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: constant.language.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: invalid.illegal.bigine}

  action-camera-reset:
    match: ^\t+(复位镜头)(?:(?:|(（）)|（(?:([快中慢])|([^）]*))）)：?|(.*))$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}
      '5': {name: invalid.illegal.bigine}

  action-camera-zoom:
    match: ^\t+(放大镜头)(?:(?:|(（）)|（(?:([快中慢])|([^）]*))）)(?:：(左上|上|右上|左|中|右|左下|下|右下)|(：.*))|(：.*))$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}
      '5': {name: constant.language.bigine}
      '6': {name: invalid.illegal.bigine}
      '7': {name: invalid.illegal.bigine}

  action-camera-move:
    match: ^\t+(移动镜头)(?:(?:|(（）)|（(?:([快中慢])|([^）]*))）)(?:：(左上|上|右上|左|中|右|左下|下|右下)|(：.*))|(：.*))$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}
      '5': {name: constant.language.bigine}
      '6': {name: invalid.illegal.bigine}
      '7': {name: invalid.illegal.bigine}

  action-camera-shake:
    match: ^\t+(抖动镜头)$\n?
    captures:
      '1': {name: keyword.operator.bigine}

  action-curtain:
    match: ^\t+(切幕动画)(?:(?:|(（）)|（(?:(淡入淡出|水平百叶窗|垂直百叶窗|渐变)|([^）]*))）)：?|(.*))?$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}
      '5': {name: invalid.illegal.bigine}

  action-motion:
    match: ^\t+(神态动画)(?:(?:|(（）)|（(?:(渐变|默认)|([^）]*))）)：?|(.*))?$\n?
    captures:
      '1': {name: keyword.operator.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}
      '5': {name: invalid.illegal.bigine}

  action-status-toggle:
    match: ^\t+((?:显示|隐藏)状态栏)：?$\n?
    captures:
      '1': {name: keyword.operator.bigine}

  action-note:
    match: ^\t+(?:(全屏文本)|(全屏文本)(?:(（）)|(?:（(?:([开关])|([^）]*))）))(.*))$\n?
    captures:
      '1': {name: invalid.illegal.bigine}
      '2': {name: keyword.operator.bigine}
      '3': {name: invalid.illegal.bigine}
      '4': {name: constant.language.bigine}
      '5': {name: invalid.illegal.bigine}
      '6': {name: invalid.illegal.bigine}

  action-note-clear:
    match: ^\t+(清除文本)$\n?
    captures:
      '1': {name: keyword.operator.bigine}

  action-note-hide:
    match: ^\t+(隐藏文本)$\n?
    captures:
      '1': {name: keyword.operator.bigine}

  action:
    patterns:
    - include: '#action-choose'
    - include: '#action-mxximum'
    - include: '#action-arithmetic'
    - include: '#action-block'
    - include: '#action-state'
    - include: '#action-director'
    - include: '#action-words'
    - include: '#action-def-data'
    - include: '#action-def-coll'
    - include: '#action-coll-pop'
    - include: '#action-coll-append'
    - include: '#action-pause'
    - include: '#action-camera-set'
    - include: '#action-camera-reset'
    - include: '#action-camera-zoom'
    - include: '#action-camera-move'
    - include: '#action-camera-shake'
    - include: '#action-curtain'
    - include: '#action-motion'
    - include: '#action-status-toggle'
    - include: '#action-note'
    - include: '#action-note-clear'
    - include: '#action-note-hide'
    - include: '#illegal'

  scene:
    begin: ^(事件)(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.scene
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.name.function.bigine}
      '3': {name: invalid.illegal.bigine}
    patterns:
    - comment: scene type
      match: ^\t(类型)：(?:((?:开始|完结|失败)时|(?:进入|离开)（([^，\s]+?)）(?:前|后))|(.*))$\n?
      name: meta.bigine.scene.type meta.bigine.ref.room.bracket meta.bigine.after.bracket
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: entity.other.inherited-class.bigine}
        '4': {name: invalid.illegal.bigine}
    - comment: scene conditions
      begin: ^\t(条件)：?$
      end: ^(?=$|\t?\S)
      name: meta.bigine.scene.conditions
      beginCaptures:
        '1': {name: storage.modifier.bigine}
      patterns:
      - include: '#action'
    - comment: scene content
      begin: ^\t(内容)：?$
      end: ^(?=$|\t?\S)
      name: meta.bigine.scene.content
      beginCaptures:
        '1': {name: storage.modifier.bigine}
      patterns:
      - include: '#action'
    - include: '#illegal'

  bigine:
    patterns:
    - include: '#scene'
    - include: '#struct'

...
