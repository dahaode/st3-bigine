# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Bigine
scopeName: text.bigine
fileTypes: [bigine, bws]
uuid: 74ffd726-943b-4531-8657-cebb5215f277

patterns:
- include: '#bigine'

repository:
  illegal:
    match: ^.*$
    name: invalid.illegal.bigine

  struct-def:
    match: ^\t\t(?:(\S+)|(.*))(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$
    captures:
      '1': {name: entity.other.attribute-name.bigine}
      '2': {name: invalid.illegal.bigine}
      '3': {name: constant.language.bigine}
      '4': {name: invalid.illegal.bigine}

  struct:
    begin: ^(?=$|\S)
    end: ^(?=$|\S)
    patterns:
    - comment: resource suite
      match: ^(素材包)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
      name: meta.bigine.suite meta.bigine.after.colon
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - comment: theme
      match: ^(主题)(?:：(\S+)|(：.*))$\n?
      name: meta.bigine.theme meta.bigine.after.colon
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - comment: autoplay
      match: ^(自动播放)(?:|：(.*))$\n?
      name: meta.bigine.autoplay
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: invalid.illegal.bigine}
    - comment: player
      match: ^(主角)(?:：(\S+)|(：.*))$\n?
      name: meta.bigine.player
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - comment: character
      begin: ^(人物)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
      end: ^(?=$|\S)
      name: meta.bigine.char
      beginCaptures:
        '1': {name: storage.type.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.name.type.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - match: ^\t(头像)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
        name: meta.bigine.char.avatar
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: constant.language.bigine}
          '3': {name: invalid.illegal.bigine}
      - begin: ^\t(姿态)：?$
        end: ^(?=$|\t?\S)
        name: meta.bigine.char.poses
        beginCaptures:
          '1': {name: storage.modifier.bigine}
        patterns:
        - include: '#struct-def'
      - include: '#illegal'
    - comment: room
      begin: ^(房间)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
      end: ^(?=$|\S)
      name: meta.bigine.room
      beginCaptures:
        '1': {name: storage.type.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.name.type.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - match: ^\t(使用地图)(?:：(\S+)|(：.*))$\n?
        name: meta.bigine.room.map
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: entity.other.inherited-class.bigine}
          '3': {name: invalid.illegal.bigine}
      - begin: ^\t(时刻)：?$
        end: ^(?=$|\t?\S)
        name: meta.bigine.char.snaps
        beginCaptures:
          '1': {name: storage.modifier.bigine}
        patterns:
        - include: '#struct-def'
      - include: '#illegal'
    - comment: map
      begin: ^(地图)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
      end: ^(?=$|\S)
      name: meta.bigine.map
      beginCaptures:
        '1': {name: storage.type.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.name.type.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - match: ^\t(底图)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
        name: meta.bigine.map.back
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: constant.language.bigine}
          '3': {name: invalid.illegal.bigine}
      - begin: ^\t(交互点)(?:|（([^，\s]+)）|(（.*）))(?:：(\S+)|(：.*))$
        end: ^(?=$|\t?\S)
        name: meta.bigine.map.point
        beginCaptures:
          '1': {name: storage.modifier.bigine}
          '2': {name: entity.other.inherited-class.bigine}
          '3': {name: invalid.illegal.bigine}
          '4': {name: entity.other.attribute-name.bigine}
          '5': {name: invalid.illegal.bigine}
        patterns:
        - match: ^\t\t(高亮)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
          name: meta.bigine.map.point.cover
          captures:
            '1': {name: storage.modifier.bigine}
            '2': {name: constant.language.bigine}
            '3': {name: invalid.illegal.bigine}
        - match: ^\t\t(对应房间)(?:：(\S+)|(：.*))$\n?
          name: meta.bigine.map.point.link
          captures:
            '1': {name: storage.modifier.bigine}
            '2': {name: entity.other.inherited-class.bigine}
            '3': {name: invalid.illegal.bigine}
        - match: ^\t\t(区域)(?:：(-?\d+)，(-?\d+)，(-?\d+)，(-?\d+)(?:|，(\d+))|(：.*))$\n?
          name: meta.bigine.map.point.region
          captures:
            '1': {name: storage.modifier.bigine}
            '2': {name: constant.numeric.bigine}
            '3': {name: constant.numeric.bigine}
            '4': {name: constant.numeric.bigine}
            '5': {name: constant.numeric.bigine}
            '6': {name: constant.numeric.bigine}
            '7': {name: invalid.illegal.bigine}
        - include: '#illegal'
      - include: '#illegal'
    - comment: sound
      begin: ^(音乐|音效)(?:：(\S+)|(：.*))$
      end: ^(?=$|\S)
      name: meta.bigine.sound
      beginCaptures:
        '1': {name: storage.type.bigine}
        '2': {name: entity.name.type.bigine}
        '3': {name: invalid.illegal.bigine}
      patterns:
      - match: ^\t(音源)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
        name: meta.bigine.sound.source
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: constant.language.bigine}
          '3': {name: invalid.illegal.bigine}
      - include: '#illegal'
    - comment: cg
      begin: ^(特写)(?:：(\S+)|(：.*))$
      end: ^(?=$|\S)
      name: meta.bigine.cg
      beginCaptures:
        '1': {name: storage.type.bigine}
        '2': {name: entity.name.type.bigine}
        '3': {name: invalid.illegal.bigine}
      patterns:
      - match: ^\t(画面)(?:：(\h{8}-\h{4}-\h{4}-\h{4}-\h{12})|(：.*))$\n?
        name: meta.bigine.cg.source
        captures:
          '1': {name: storage.modifier.bigine}
          '2': {name: constant.language.bigine}
          '3': {name: invalid.illegal.bigine}
      - include: '#illegal'
    - include: '#illegal'

  option:
    patterns:
    - match: ^\t+(?:(\S+?)|(.*))(?:：(\S(?:|.*\S))|(：.*))$
      captures:
        '1': {name: constant.character.bigine}
        '2': {name: invalid.illegal.bigine}
        '3': {name: string.quoted.double.bigine}
        '4': {name: invalid.illegal.bigine}
    - match: ^\t+(\S(?:|.*\S))$
      captures:
        '1': {name: constant.character.bigine}

  choose:
    patterns:
    - begin: ^(\t+)(选择)(?:|（([^，\s]+)）|(（.*）))(?:|：(\S+)|(：.*))$\n?
      end: ^(?!\1\t)
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket meta.bigine.ref.choose.colon meta.bigine.after.colon
      contentName: meta.bigine.literal
      beginCaptures:
        '2': {name: keyword.control.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
        '5': {name: variable.other.choose.bigine}
        '6': {name: invalid.illegal.bigine}
      patterns:
      - include: '#option'
      - include: '#illegal'
    - begin: ^(\t+)(定义选择)(?:：(\S+)|(：.*))$\n?
      end: ^(?!\1\t)
      name: meta.bigine.ref.choose.colon meta.bigine.after.colon
      contentName: meta.bigine.literal
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: variable.other.choose.bigine}
        '4': {name: invalid.illegal.bigine}
      patterns:
      - include: '#option'
      - include: '#illegal'
    - match: ^\t+((?:添加|去除)选项)(?:（([^，\s]+)，([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.choose.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.choose.bigine}
        '3': {name: constant.character.bigine}
        '4': {name: invalid.illegal.bigine}

  mxximum:
    begin: ^(\t+)(最[大小]数据)(?:|（([^，\s]+)）|(（.*）))：?$\n?
    end: ^(?!\1\t)
    name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
    contentName: meta.bigine.literal
    beginCaptures:
      '2': {name: keyword.operator.bigine}
      '3': {name: variable.other.state.bigine}
      '4': {name: invalid.illegal.bigine}
    patterns:
    - match: ^\t+(\S+)$\n?
      captures:
        '1': {name: variable.other.state.bigine}
    - include: '#illegal'

  block:
    patterns:
    - begin: ^(\t+)(?:(且|或|那么|否则|循环)|(如果)(?:（([^，\s](?:|[^，]*[^，\s]))）|(（.*）)))：?$
      end: ^(?!\1\t)
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: keyword.operator.bigine}
        '4': {name: constant.character.bigine}
        '5': {name: invalid.illegal.bigine}
      patterns:
      - include: '#action'
    - begin: ^(\t+)(如果数据)(?:（([^，\s]+)）|(（.*）))：?$
      end: ^(?!\1\t)
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      beginCaptures:
        '2': {name: keyword.operator.bigine}
        '3': {name: variable.other.state.bigine}
        '4': {name: invalid.illegal.bigine}
      patterns:
      - include: '#action'

  for-state:
    patterns:
    - match: ^\t+(当数据)(?:（([^，\s]+?)，([^，\s](?:|[^，]*[^，\s]))(?:|，(不?[等大小]于))）|(（.*）))：?$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: constant.character.bigine}
        '4': {name: constant.language.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+((?:对比|随机)数据)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+((?:设置|增加)数据)(?:（([^，\s]+)）|(（.*）))(?:：(\S(?:|.*\S))|(：.*))$\n?
      name: meta.bigine.ref.state.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: variable.other.state.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: constant.character.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(自动存档)(?:|（([^，\s]+)）|(（.*）))：?$\n?
      captures:
        '1': {name: keyword.operator.bigine}
        '2': {name: string.quoted.double.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(游戏(?:完结|失败)|循环中止)：?$\n?
      captures:
        '1': {name: keyword.operator.bigine}

  for-director:
    patterns:
    - match: ^\t+(设置人物|人物出场)(?:|（([左中右])）|(（.*）))(?:：([^，\s](?:|[^，]*[^，\s]))(?:|，([^，\s]+))|(：.*))$\n?
      name: meta.bigine.ref.char.colon meta.bigine.after.colon meta.bigine.ref.pose.comma meta.bigine.after.comma
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.other.inherited-class.bigine}
        '5': {name: entity.other.attribute-name.bigine}
        '6': {name: invalid.illegal.bigine}
    - match: ^\t+(人物离场)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(播放音乐)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.bgm.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(播放音效)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.se.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(展示特写)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.cg.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+((?:设置|进入)房间)(?:（([^，\s]+)）|(（.*）))：?$\n?
      name: meta.bigine.ref.room.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(设置时间)(?:（([^，\s]+)）|(（.*）))：?$
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.attribute-name.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(改变神态)(?:（([^，\s]+)）|(（.*）))(?:：([^，\s]+)|(：.*))$\n?
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket meta.bigine.ref.pose.colon meta.bigine.after.colon
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: entity.other.attribute-name.bigine}
        '5': {name: invalid.illegal.bigine}
    - match: ^\t+(评分)(?:（(完美|优秀|及格)）|(（.*）))：?$\n?
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: invalid.illegal.bigine}
    - match: ^\t+(关闭特写|移动中止|停止音乐)：?$\n?
      captures:
        '1': {name: keyword.control.bigine}
    - match: ^\t+(人物移动)(?:（([^，\s]+)）|(（.*）))(?:：([左中右])|(：.*))$\n?
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket
      captures:
        '1': {name: keyword.control.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: invalid.illegal.bigine}
        '4': {name: constant.language.bigine}
        '5': {name: invalid.illegal.bigine}

  for-words:
    begin: ^\t+(?:([旁独]白|提示)(?=：)|(对白)(?=（))
    end: $
    beginCaptures:
      '1': {name: keyword.control.bigine}
      '2': {name: keyword.control.bigine}
    patterns:
    - match: (?<=对白)(?:（([^，\s]+)，([^，\s]+)(?:|，(\S(?:|.*?\S)))）|(（.*）))(?=：)
      name: meta.bigine.ref.char.bracket meta.bigine.after.bracket meta.bigine.ref.char.comma meta.bigine.after.comma
      captures:
        '1': {name: entity.other.inherited-class.bigine}
        '2': {name: entity.other.inherited-class.bigine}
        '3': {name: string.quoted.double.bigine}
        '4': {name: invalid.illegal.bigine}
    - begin: (?<=：)
      end: $
      contentName: string.quoted.double.bigine
      patterns:
      - match: 【(.+?)】
        name: string.regexp.bigine
      - match: 〈(\S+?)〉|＜(\S+?)＞
        name: string.interpolated.bigine
        captures:
          '1': {name: variable.other.state.bigine}
          '2': {name: variable.other.state.bigine}

  action:
    patterns:
    - include: '#choose'
    - include: '#mxximum'
    - include: '#block'
    - include: '#for-state'
    - include: '#for-director'
    - include: '#for-words'
    - include: '#illegal'

  scene:
    begin: ^(事件)(?:：(\S+)|(：.*))$
    end: ^(?=$|\S)
    name: meta.bigine.scene
    beginCaptures:
      '1': {name: storage.type.bigine}
      '2': {name: entity.name.function.bigine}
      '3': {name: invalid.illegal.bigine}
    patterns:
    - comment: scene type
      match: ^\t(类型)：(?:((?:开始|完结|失败)时|(?:进入|离开)（([^，\s]+?)）(?:前|后))|(.*))$\n?
      name: meta.bigine.scene.type meta.bigine.ref.room.bracket meta.bigine.after.bracket
      captures:
        '1': {name: storage.modifier.bigine}
        '2': {name: constant.language.bigine}
        '3': {name: entity.other.inherited-class.bigine}
        '4': {name: invalid.illegal.bigine}
    - comment: scene conditions
      begin: ^\t(条件)：?$
      end: ^(?=$|\t?\S)
      name: meta.bigine.scene.conditions
      beginCaptures:
        '1': {name: storage.modifier.bigine}
      patterns:
      - include: '#action'
    - comment: scene content
      begin: ^\t(内容)：?$
      end: ^(?=$|\t?\S)
      name: meta.bigine.scene.content
      beginCaptures:
        '1': {name: storage.modifier.bigine}
      patterns:
      - include: '#action'
    - include: '#illegal'

  bigine:
    patterns:
    - include: '#scene'
    - include: '#struct'

...
